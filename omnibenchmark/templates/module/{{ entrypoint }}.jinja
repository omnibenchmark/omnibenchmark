{%- if entrypoint == "run.py" -%}
#!/usr/bin/env python3

import argparse
import sys
from pathlib import Path

# Add src directory to Python path
src_dir = Path(__file__).parent / "src"
sys.path.insert(0, str(src_dir))

from main import process_data

def parse_args():
    parser = argparse.ArgumentParser(description='OmniBenchmark module')
    parser.add_argument('--input', required=True, help='Input file')
    parser.add_argument('--output', required=True, help='Output file')
    return parser.parse_args()

def main():
    args = parse_args()

    print(f"Input: {args.input}")
    print(f"Output: {args.output}")

    # Process the data using main function
    process_data(args.input, args.output)

if __name__ == "__main__":
    main()
{%- elif entrypoint == "run.R" -%}
#!/usr/bin/env Rscript

# Source main functions
source("src/main.R")

# Parse command line arguments
args <- commandArgs(trailingOnly = TRUE)

# If you want to treat them as key=value pairs:
parse_args <- function(args) {
  res <- list()
  for (a in args) {
    kv <- strsplit(a, "=")[[1]]
    if (length(kv) == 2) {
      res[[kv[1]]] <- kv[2]
    } else {
      res[[length(res) + 1]] <- a
    }
  }
  return(res)
}

opts <- parse_args(args)

# Example usage
if (is.null(opts[["input"]])) {
  cat("Usage: script.R input=FILE output=FILE\n")
  quit(status = 1)
}

cat("Input:", opts[["input"]], "\n")
cat("Output:", opts[["output"]], "\n")

# Process the data using main function
process_data(opts[["input"]], opts[["output"]])
{%- else -%}
#!/bin/bash

set -euo pipefail

# Source main functions
source "$(dirname "$0")/src/main.sh"

# Parse command line arguments
INPUT=""
OUTPUT=""

while [[ $# -gt 0 ]]; do
  case $1 in
    --input)
      INPUT="$2"
      shift 2
      ;;
    --output)
      OUTPUT="$2"
      shift 2
      ;;
    *)
      echo "Unknown option $1"
      exit 1
      ;;
  esac
done

# Check required arguments
if [[ -z "$INPUT" || -z "$OUTPUT" ]]; then
    echo "Usage: $0 --input FILE --output FILE"
    exit 1
fi

echo "Input: $INPUT"
echo "Output: $OUTPUT"

# Process the data using main function
process_data "$INPUT" "$OUTPUT"
{%- endif %}
