[project]
name = "omnibenchmark"
description = "A tool for automated scientific benchmarking"
authors = [
    { name = "Almut LÃ¼tge", email = "almut.lue@gmail.com" },
    { name = "Izaskun Mallona", email = "izaskun.mallona@gmail.com" },
    { name = "Daniel Incicau", email = "daniel.incicau@gmail.com" },
    { name = "Reto Gerber" },
    { name = "Ben Carrillo" },
]
readme = "README.md"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
requires-python = "~=3.12"

dynamic = ["version"]

dependencies = [
    "click>=8.1.7",
    "aiohttp>=3.9.5",
    "async>=0.6.2",
    "tqdm>=4.66.4",
    "requests>=2.31.0",
    "python-dateutil>=2.9.0.post0",
    "filelock>=3.4.0",
    "spdx-license-list>=3.19",
    "PyYAML",
    "humanfriendly",
    "pydantic",

    # DAG & Visualization
    "networkx>=3.3",     # this might be overkill for the DAG
    "matplotlib==3.8.0",
    "pydot>=3.0.2",

    # Cloning modules
    "GitPython>=3.1.0",

    # Workflow
    "snakemake>=8.0", # modify constraints.txt if you need stricter pinning

    # Build tools
    "easybuild>=5.0.0",
    "easybuild-easyblocks>=5.0.0",

    # Other runtime dependencies
    "omni-schema>=0.0.6",                               # To be deprecated
    "snakemake-executor-plugin-slurm (>=1.4.0,<2.0.0)",

]

[project.urls]
Homepage = "https://omnibenchmark.org"
Repository = "https://github.com/omnibenchmark/omnibenchmark"

[project.optional-dependencies]
s3 = ["minio>=7.2.7", "boto3>=1.34.102", "snakemake-storage-plugin-s3>=0.2.12"]
test = [
    "pytest-cov>=4.1.0",
    "pytest-split>=0.9.0",
    "pytest-xdist>=3.6.1",
    "testcontainers>=4.5.1",
    "pytest-timeout==2.3.1",
    "s3fs[boto3]>=2023.12.0",
]
dev = ["ipython", "pre-commit", "ruff", "typing-extensions", "isort", "pyright"]

[project.scripts]
ob = 'omnibenchmark.cli.main:cli'

[build-system]
requires = ["setuptools>=61", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["omnibenchmark"]

[tool.setuptools_scm]
# Optional settings (or leave empty for default)
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.isort]
profile = "black"

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.ruff]
line-length = 88 # Match Black's default line length

[tool.ruff.lint]
ignore = ["E203"] # Ignore E203

[tool.coverage.run]
source = ["omnibenchmark"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.xml]
output = "reports/coverage.xml"
